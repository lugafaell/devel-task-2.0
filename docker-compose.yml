version: "3"
services:
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: develtask_user
      POSTGRES_PASSWORD: 200565
      POSTGRES_DB: devel_task
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "develtask_user", "-d", "devel_task"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  backend:
    build: ./task-manager-backend
    container_name: backend_service
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: develtask_user
      POSTGRES_PASSWORD: 200565
      POSTGRES_DB: devel_task
    networks:
      - my_network

  frontend:
    build: ./task-manager-frontend
    container_name: frontend_service
    ports:
      - "8080:80"
    networks:
      - my_network

  nginx-proxy-manager:
    image: "jc21/nginx-proxy-manager:latest"
    container_name: proxy_manager
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt
    networks:
      - my_network

volumes:
  db_data:

networks:
  my_network:
    driver: bridge
